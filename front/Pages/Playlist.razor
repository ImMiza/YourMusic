@page "/playlists"
@using System.Net.Http.Headers
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (playlists == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <h3>Cr√©er une playlist</h3>

    <form class="form-inline">
        <div class="form-group mb-2">
            <label for="username" class="col-form-label">Nom</label>
            <input type="text" id="name" name="name" class="form-control" placeholder="Nom de la playlist" @bind="_addName"/>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label for="username" class="col-form-label">Nom</label>
            <textarea placeholder="Description" class="form-control" @bind="_addDescription"></textarea>
        </div>
        <div class="form-group mx-sm-3 mb-2">
            <label for="password" class="col-form-label">Mot de passe</label>
            <input type="text" id="url_image" class="form-control" name="url_image" placeholder="Lien d'une image (Optionnel)" @bind="_addUrlImage" />
        </div>
        <button type="button" class="form-control" @onclick="CreatePlaylist">Ajouter</button>
    </form>

    @if (playlists.Length == 0)
    {
        <h1>Vous n'avez toujours pas de PlayList ! Il est temps de commencer !</h1>
    }

    <label>Recherche par nom</label>
    <input type="text" id="search" name="search" @oninput="(e)=> SearchName(e.Value.ToString())" />

    <table>
        <thead>
            <th></th>
            <th>Nom</th>
            <th>Description</th>
            <th></th>
            <th></th>
            <th></th>
        </thead>

        
            @foreach (var playlist in playlists)
            {
                <tbody>
                    <td style="padding:20px;"><img src="@playlist.UrlImage" alt="img" /></td>
                    <td style="padding:20px;">@playlist.Name</td>
                    <td style="padding:20px;">@playlist.Description</td>
                    <td style="padding:20px;"><button type="button">Supprimer</button></td>
                </tbody>
                @foreach (var music in playlist.Musics)
                {
                    <tbody> 
                        <td></td>
                        <td style="padding:20px;"><img src="@music.UrlImage" alt="@music.Artist" /></td>
                        <td style="padding:20px;">@music.Name</td>
                        <td style="padding:20px;">@music.Artist</td>
                        <td style="padding:20px;">@music.ReleaseDate</td>
                        <td style="padding:20px;"><a href="@music.UrlMusic" target="_blank"><button type="button">Ecouter</button></a></td>
                    </tbody>
                }
                
            }
        
    </table>
    

}

@code {
    private yourmusic.Models.Playlist[] playlists;

    private string _addName;
    private string _addDescription;
    private string _addUrlImage;

    private string _searchName = "";
    protected override async Task OnInitializedAsync()
    {
        await UpdateList();
    }

    private async Task CreatePlaylist() 
    {
        string token = await localStorage.GetItemAsync<string>("Token");
        var parameters = new Dictionary<string, string> 
        { 
            { "name", _addName }, 
            { "description", _addDescription },
            { "urlImage", _addUrlImage }, 
            { "releaseDate", DateTime.UtcNow.ToString() }
        };

        var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:5001/api/PlaylistControllers");
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
        request.Headers.ExpectContinue = false;

        await Http.SendAsync(request);

        _addName = "";
        _addDescription = "";
        _addUrlImage = "";
    }

    private async Task UpdateList() 
    {
        string token = await localStorage.GetItemAsync<string>("Token");
        var request = new HttpRequestMessage(HttpMethod.Get, $"https://localhost:5001/api/PlaylistControllers?name={_searchName}");
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
        
        using var httpResponse = await Http.SendAsync(request);

        if(((int) httpResponse.StatusCode) == 200) {
            playlists = await httpResponse.Content.ReadFromJsonAsync<yourmusic.Models.Playlist[]>();
        }
    }

    private async Task SearchName(string name) {
        _searchName = name;
        await UpdateList();
    }

}
